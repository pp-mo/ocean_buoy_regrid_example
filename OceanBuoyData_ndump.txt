itpp@eld238: /home/h05/itpp > ncdump -h /data/local/dataZoo/NetCDF/oceanObs/EN3_v2a_Profiles_195001.nc
netcdf EN3_v2a_Profiles_195001 {
dimensions:
    DATE_TIME = 14 ;
    STRING256 = 256 ;
    STRING64 = 64 ;
    STRING32 = 32 ;
    STRING16 = 16 ;
    STRING8 = 8 ;
    STRING4 = 4 ;
    STRING2 = 2 ;
    N_PROF = 2581 ;
    N_PARAM = 5 ;
    N_LEVELS = 55 ;
    N_TECH_PARAM = 1 ;
    N_CALIB = 1 ;
    N_HISTORY = UNLIMITED ; // (0 currently)
variables:
    char DATA_TYPE(STRING16) ;
        DATA_TYPE:long_name = "Type of data stored in file eg ARGO or ENSEMBLES" ;
    char FORMAT_VERSION(STRING4) ;
        FORMAT_VERSION:long_name = "file format version" ;
    float HANDBOOK_VERSION ;
        HANDBOOK_VERSION:long_name = "data handbook version" ;
    char REFERENCE_DATE_TIME(DATE_TIME) ;
        REFERENCE_DATE_TIME:long_name = "date of reference for julian days" ;
        REFERENCE_DATE_TIME:conventions = "yyyymmddhh24miss" ;
    char PROJECT_NAME(N_PROF, STRING64) ;
        PROJECT_NAME:long_name = "name of the project" ;
    char PI_NAME(N_PROF, STRING64) ;
        PI_NAME:long_name = "primary investigator name" ;
    char STATION_PARAMETERS(N_PROF, N_PARAM, STRING4) ;
        STATION_PARAMETERS:long_name = "list of available PARAMETERs for the station" ;
        STATION_PARAMETERS:conventions = "gf3 code list in (deph, potm, psal, cndc)" ;
    char PLATFORM_NUMBER(N_PROF, STRING8) ;
        PLATFORM_NUMBER:long_name = "float unique identifier" ;
        PLATFORM_NUMBER:conventions = "wmo float identifier : qa9iiiii" ;
    int CYCLE_NUMBER(N_PROF) ;
        CYCLE_NUMBER:long_name = "float cycle number" ;
        CYCLE_NUMBER:conventions = "0..n, o : launch cycle(if exists), 1 : first complete cycle" ;
        CYCLE_NUMBER:_fillvalue = 99999 ;
    char DIRECTION(N_PROF) ;
        DIRECTION:long_name = "direction of the station profiles" ;
        DIRECTION:conventions = "a : ascending profiles, d : descending profiles" ;
    char DATA_CENTRE(N_PROF, STRING2) ;
        DATA_CENTRE:long_name = "data centre in charge of float data processing" ;
        DATA_CENTRE:conventions = "gtspp table" ;
    char DATE_CREATION(DATE_TIME) ;
        DATE_CREATION:long_name = "date of file creation" ;
        DATE_CREATION:conventions = "yyyymmddhh24miss" ;
    char DATE_UPDATE(DATE_TIME) ;
        DATE_UPDATE:long_name = "date of update of this file" ;
        DATE_UPDATE:conventions = "yyyymmddhh24miss" ;
    char DC_REFERENCE(N_PROF, STRING16) ;
        DC_REFERENCE:long_name = "station unique identifier in data centre" ;
        DC_REFERENCE:conventions = "data centre convention" ;
    char DATA_STATE_INDICATOR(N_PROF, STRING4) ;
        DATA_STATE_INDICATOR:long_name = "degree of processing the data have passed through" ;
        DATA_STATE_INDICATOR:conventions = "oopc table" ;
    char DATA_MODE(N_PROF) ;
        DATA_MODE:long_name = "delayed mode or real time data" ;
        DATA_MODE:conventions = "r : real time ; d : delayed mode" ;
    char INST_REFERENCE(N_PROF, STRING64) ;
        INST_REFERENCE:long_name = "instrument type" ;
        INST_REFERENCE:conventions = "brand/type/serial number" ;
    char WMO_INST_TYPE(N_PROF, STRING4) ;
        WMO_INST_TYPE:long_name = "code instrument type" ;
        WMO_INST_TYPE:conventions = "wmo code table 1770 - instrument type" ;
    double JULD(N_PROF) ;
        JULD:long_name = "julian day (utc) of the station relative to reference_date_time" ;
        JULD:units = "days since 1950-01-01 00:00:00 utc" ;
        JULD:conventions = "relative julian days with decimal part (as parts of day)" ;
        JULD:_fillvalue = 99999. ;
    char JULD_QC(N_PROF) ;
        JULD_QC:long_name = "quality on date and time" ;
        JULD_QC:conventions = "q where q=[0-9]" ;
        JULD_QC:_fillvalue = "0" ;
    double JULD_LOCATION(N_PROF) ;
        JULD_LOCATION:long_name = "julian day (utc) of the location relative to reference_date_time" ;
        JULD_LOCATION:units = "days since 1950-01-01 00:00:00 utc" ;
        JULD_LOCATION:conventions = "relative julian days with decimal part (as parts of day)" ;
        JULD_LOCATION:_fillvalue = 99999. ;
    double LATITUDE(N_PROF) ;
        LATITUDE:long_name = "latitude of the station, best estimated value" ;
        LATITUDE:units = "degree_north" ;
        LATITUDE:_fillvalue = 99999. ;
        LATITUDE:valid_min = -90. ;
        LATITUDE:valid_max = 90. ;
    double LONGITUDE(N_PROF) ;
        LONGITUDE:long_name = "longitude of the station, best estimated value" ;
        LONGITUDE:units = "degree_east" ;
        LONGITUDE:_fillvalue = 99999. ;
        LONGITUDE:valid_min = -180. ;
        LONGITUDE:valid_max = 180. ;
    char POSITION_QC(N_PROF) ;
        POSITION_QC:long_name = "quality on position (latitude and longitude)" ;
        POSITION_QC:conventions = "q where q =[0,9]" ;
        POSITION_QC:_fillvalue = "0" ;
    char POSITIONING_SYSTEM(N_PROF, STRING8) ;
        POSITIONING_SYSTEM:long_name = "positioning system" ;
        POSITIONING_SYSTEM:conventions = "argos or gps" ;
    char PROFILE_DEPH_QC(N_PROF) ;
        PROFILE_DEPH_QC:long_name = "global quality flag of depth profile" ;
        PROFILE_DEPH_QC:conventions = "q where q =[0,9]" ;
        PROFILE_DEPH_QC:_fillvalue = "0" ;
    char PROFILE_PSAL_QC(N_PROF) ;
        PROFILE_PSAL_QC:long_name = "global quality flag of practical salinity profile" ;
        PROFILE_PSAL_QC:conventions = "q where q =[0,9]" ;
        PROFILE_PSAL_QC:_fillvalue = "0" ;
    char PROFILE_POTM_QC(N_PROF) ;
        PROFILE_POTM_QC:long_name = "global quality flag of theta profile" ;
        PROFILE_POTM_QC:conventions = "q where q =[0,9]" ;
        PROFILE_POTM_QC:_fillvalue = "0" ;
    float DEPH_CORRECTED(N_PROF, N_LEVELS) ;
        DEPH_CORRECTED:long_name = "corrected depth" ;
        DEPH_CORRECTED:_fillvalue = 99999. ;
        DEPH_CORRECTED:units = "metre" ;
        DEPH_CORRECTED:valid_min = 0. ;
        DEPH_CORRECTED:valid_max = 15000. ;
        DEPH_CORRECTED:c_format = "%7.1f" ;
        DEPH_CORRECTED:fortran_format = "f7.1" ;
        DEPH_CORRECTED:resolution = 0.1 ;
    char DEPH_CORRECTED_QC(N_PROF, N_LEVELS) ;
        DEPH_CORRECTED_QC:long_name = "quality on depth" ;
        DEPH_CORRECTED_QC:conventions = "q where q =[0,9]" ;
        DEPH_CORRECTED_QC:_fillvalue = "0" ;
    float PSAL_CORRECTED(N_PROF, N_LEVELS) ;
        PSAL_CORRECTED:long_name = "corrected practical salinity" ;
        PSAL_CORRECTED:_fillvalue = 99999. ;
        PSAL_CORRECTED:units = "psu" ;
        PSAL_CORRECTED:valid_min = 0. ;
        PSAL_CORRECTED:valid_max = 60. ;
        PSAL_CORRECTED:comment = "corrected value" ;
        PSAL_CORRECTED:c_format = "%9.3f" ;
        PSAL_CORRECTED:fortran_format = "f9.3" ;
        PSAL_CORRECTED:resolution = 0.001 ;
    char PSAL_CORRECTED_QC(N_PROF, N_LEVELS) ;
        PSAL_CORRECTED_QC:long_name = "quality on practical salinity" ;
        PSAL_CORRECTED_QC:conventions = "q where q =[0,9]" ;
        PSAL_CORRECTED_QC:_fillvalue = "0" ;
    float TEMP(N_PROF, N_LEVELS) ;
        TEMP:long_name = "Temperature in situ t90 scale" ;
        TEMP:_fillvalue = 99999. ;
        TEMP:units = "degree_celsius" ;
        TEMP:valid_min = -3. ;
        TEMP:valid_max = 40. ;
        TEMP:comment = "in situ measurement" ;
        TEMP:c_format = "%9.3f" ;
        TEMP:fortran_format = "f9.3" ;
        TEMP:resolution = 0.001 ;
    float POTM_CORRECTED(N_PROF, N_LEVELS) ;
        POTM_CORRECTED:long_name = "corrected pot. temp" ;
        POTM_CORRECTED:_fillvalue = 99999. ;
        POTM_CORRECTED:units = "degree_celsius" ;
        POTM_CORRECTED:valid_min = -3. ;
        POTM_CORRECTED:valid_max = 40. ;
        POTM_CORRECTED:comment = "corrected value" ;
        POTM_CORRECTED:c_format = "%9.3f" ;
        POTM_CORRECTED:fortran_format = "f9.3" ;
        POTM_CORRECTED:resolution = 0.001 ;
    char POTM_CORRECTED_QC(N_PROF, N_LEVELS) ;
        POTM_CORRECTED_QC:long_name = "quality on pot. temperature" ;
        POTM_CORRECTED_QC:conventions = "q where q =[0,9]" ;
        POTM_CORRECTED_QC:_fillvalue = "0" ;
    float BKPT(N_PROF, N_LEVELS) ;
        BKPT:long_name = "Background QC val Pot. temperature" ;
        BKPT:_fillvalue = 99999. ;
        BKPT:units = "degree_celsius" ;
        BKPT:valid_min = -3. ;
        BKPT:valid_max = 40. ;
        BKPT:comment = "in situ measurement" ;
        BKPT:c_format = "%9.3f" ;
        BKPT:fortran_format = "f9.3" ;
        BKPT:resolution = 0.001 ;
    float BKPS(N_PROF, N_LEVELS) ;
        BKPS:long_name = "Background QC val practical salinity" ;
        BKPS:_fillvalue = 99999. ;
        BKPS:units = "psu" ;
        BKPS:valid_min = 0. ;
        BKPS:valid_max = 60. ;
        BKPS:comment = "in situ measurement, mandatory if salinity measured" ;
        BKPS:c_format = "%9.3f" ;
        BKPS:fortran_format = "f9.3" ;
        BKPS:resolution = 0.001 ;
    int QC_FLAGS_PROFILES(N_PROF) ;
    int QC_FLAGS_LEVELS(N_PROF, N_LEVELS) ;
    char PARAMETER(N_PROF, N_CALIB, N_PARAM, STRING4) ;
        PARAMETER:long_name = "list of PARAMETERs with calibration information" ;
        PARAMETER:conventions = "gf3 code list in (deph, potm, psal, bkpt, bkps, anpt)" ;
    char SCIENTIFIC_CALIB_EQUATION(N_PROF, N_CALIB, N_PARAM, STRING256) ;
        SCIENTIFIC_CALIB_EQUATION:long_name = "calibration equation for this PARAMETER" ;
    char SCIENTIFIC_CALIB_COEFFICIENT(N_PROF, N_CALIB, N_PARAM, STRING256) ;
        SCIENTIFIC_CALIB_COEFFICIENT:long_name = "calibration coefficients for this equation" ;
    char SCIENTIFIC_CALIB_COMMENT(N_PROF, N_CALIB, N_PARAM, STRING256) ;
        SCIENTIFIC_CALIB_COMMENT:long_name = "comment applying to this PARAMETER calibration" ;
    char CALIBRATION_DATE(N_PROF, N_CALIB, N_PARAM, DATE_TIME) ;
        CALIBRATION_DATE:long_name = "date of calibration of this PARAMETER" ;
        CALIBRATION_DATE:conventions = "yyyymmddhh24miss" ;
    char HISTORY_INSTITUTION(N_HISTORY, N_PROF, STRING4) ;
        HISTORY_INSTITUTION:long_name = "institution which performed action" ;
        HISTORY_INSTITUTION:conventions = "gtspp institution code" ;
    char HISTORY_SOFTWARE(N_HISTORY, N_PROF, STRING4) ;
        HISTORY_SOFTWARE:long_name = "software which performed action" ;
        HISTORY_SOFTWARE:conventions = "institution dependent" ;
    char HISTORY_SOFTWARE_RELEASE(N_HISTORY, N_PROF, STRING4) ;
        HISTORY_SOFTWARE_RELEASE:long_name = "version/release of software which performed action" ;
        HISTORY_SOFTWARE_RELEASE:conventions = "institution dependent" ;
    char HISTORY_DATE(N_HISTORY, N_PROF, DATE_TIME) ;
        HISTORY_DATE:long_name = "date the history record was created" ;
        HISTORY_DATE:conventions = "yyyymmddhh24miss" ;
    char HISTORY_ACTION(N_HISTORY, N_PROF, STRING4) ;
        HISTORY_ACTION:long_name = "action performed on data" ;
        HISTORY_ACTION:conventions = "gtspp (meds) action code" ;
    char HISTORY_PARAMETER(N_HISTORY, N_PROF, STRING4) ;
        HISTORY_PARAMETER:long_name = "station PARAMETER action is performed on" ;
        HISTORY_PARAMETER:conventions = "gf3 PARAMETER code" ;
    float HISTORY_START_DEPH(N_HISTORY, N_PROF) ;
        HISTORY_START_DEPH:long_name = "start depth action applied on" ;
        HISTORY_START_DEPH:_fillvalue = 99999. ;
        HISTORY_START_DEPH:units = "metre" ;
    float HISTORY_STOP_DEPH(N_HISTORY, N_PROF) ;
        HISTORY_STOP_DEPH:long_name = "stop depth action applied on" ;
        HISTORY_STOP_DEPH:_fillvalue = 99999. ;
        HISTORY_STOP_DEPH:units = "metre" ;
    float HISTORY_PREVIOUS_VALUE(N_HISTORY, N_PROF) ;
        HISTORY_PREVIOUS_VALUE:long_name = "PARAMETER/flag previous value before action" ;
        HISTORY_PREVIOUS_VALUE:_fillvalue = 99999. ;
    char HISTORY_QCTEST(N_HISTORY, N_PROF, STRING16) ;
        HISTORY_QCTEST:long_name = "documentation of tests performed, tests failed (in hex form)" ;
        HISTORY_QCTEST:conventions = "write tests performed when action=qcp$; tests failed when action=qcf$" ;
}
itpp@eld238: /home/h05/itpp > 
